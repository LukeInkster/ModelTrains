package ModelTrainLanguage.sandbox;

/*Generated by MPS */

import javax.swing.JFrame;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JPanel;
import java.awt.Dimension;

public class map_ModelTrainSet extends JFrame {
  public static float pointGap = 2;
  private static List<map_ModelTrainSet.TrackSegment> trackPoints = new ArrayList<map_ModelTrainSet.TrackSegment>();
  private JPanel panel = new JPanel();
  public static void main(String[] args) {
    map_ModelTrainSet mts = new map_ModelTrainSet();
    mts.init();
  }

  public static class TrackSegment {
    private List<map_ModelTrainSet.Vector3> points;
    private String from;
    private String to;
    public TrackSegment(List<map_ModelTrainSet.Vector3> points, String from, String to) {
      this.points = points;
      this.from = from;
      this.to = to;
    }
  }

  public static class Vector3 {
    public float x;
    public float y;
    public float z;
    public Vector3(float x, float y, float z) {
      this.x = x;
      this.y = y;
      this.z = z;
    }
  }

  public static void addTrackSegment(List<map_ModelTrainSet.Vector3> points, String from, String to) {
    trackPoints.add(new map_ModelTrainSet.TrackSegment(points, from, to));
  }

  public void init() {
    trackCreation();
    trackDrawing();
    setTitle("ModelTrain Example Track");
    setDefaultCloseOperation(EXIT_ON_CLOSE);
    add(panel);
    panel.setPreferredSize(new Dimension(500, 500));
    pack();
    setVisible(true);
  }

  public static map_ModelTrainSet.Vector3 arcCalc(float p, float r, float a) {
    map_ModelTrainSet.Vector3 ans = null;
    map_ModelTrainSet.Vector3 center = new map_ModelTrainSet.Vector3(0, 0, r);
    map_ModelTrainSet.Vector3 point = new map_ModelTrainSet.Vector3(p, 0, 0);
    double d = Math.toRadians(a);
    double x = (Math.cos(d) * (point.x - center.x) - Math.sin(d) * (point.y - center.y) + center.x);
    double y = (Math.sin(d) * (point.x - center.x) + Math.cos(d) * (point.y - center.y) + center.y);
    ans.x = (float) x;
    ans.y = (float) y;
    return ans;
  }

  private void trackDrawing() {
    // T 
  }

  public static void printTest(String s) {
    System.out.println(s);
  }

  private void trackCreation() {
    // Turns track pieces into sets of 3d positions 
    {
      // Get names of connecting tracks 
      String s1 = "2";
      String s2 = "";

      // Create track segments based on this track piece 
      String len = "5.0f";
      float f1 = 0;
      float f2 = map_ModelTrainSet.pointGap;
      try {
        f1 = Float.parseFloat(len);
      } catch (NumberFormatException e) {
        System.out.println("Straight Track " + "1" + " has an invalid length: " + len);
      }

      List<map_ModelTrainSet.Vector3> list = new ArrayList<map_ModelTrainSet.Vector3>();
      for (float i = 0; i < f1; i += f2) {
        list.add(new map_ModelTrainSet.Vector3(i, 0, 0));
      }
      list.add(new map_ModelTrainSet.Vector3(f1, 0, 0));

      map_ModelTrainSet.addTrackSegment(list, s1, s2);
    }
    {
      // Get names of connecting tracks 
      String s1 = "1";
      String s2 = "3";

      // Create track segments based on this track piece 
      String len = "5.0f";
      float f1 = 0;
      float f2 = map_ModelTrainSet.pointGap;
      try {
        f1 = Float.parseFloat(len);
      } catch (NumberFormatException e) {
        System.out.println("Straight Track " + "2" + " has an invalid length: " + len);
      }

      List<map_ModelTrainSet.Vector3> list = new ArrayList<map_ModelTrainSet.Vector3>();
      for (float i = 0; i < f1; i += f2) {
        list.add(new map_ModelTrainSet.Vector3(i, 0, 0));
      }
      list.add(new map_ModelTrainSet.Vector3(f1, 0, 0));

      map_ModelTrainSet.addTrackSegment(list, s1, s2);
    }
    {
      // Get names of connecting tracks 
      String s1 = "2";
      String s2 = "";

      // Create track segments based on this track piece 
      String len = "3.0f";
      float f1 = 0;
      float f2 = map_ModelTrainSet.pointGap;
      try {
        f1 = Float.parseFloat(len);
      } catch (NumberFormatException e) {
        System.out.println("Straight Track " + "3" + " has an invalid length: " + len);
      }

      List<map_ModelTrainSet.Vector3> list = new ArrayList<map_ModelTrainSet.Vector3>();
      for (float i = 0; i < f1; i += f2) {
        list.add(new map_ModelTrainSet.Vector3(i, 0, 0));
      }
      list.add(new map_ModelTrainSet.Vector3(f1, 0, 0));

      map_ModelTrainSet.addTrackSegment(list, s1, s2);
    }
  }
}
